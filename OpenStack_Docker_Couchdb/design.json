{
  "_id": "_design/language",
  "views": {
    "countTweetByStates": {
      "reduce": "_count",
      "map": "function (doc) {\r\n  if (doc.place && doc.place.full_name) {\r\n      var loc_l = doc.place.full_name.toLowerCase();\r\n      var loc = doc.place.full_name;\r\n  }\r\n  if (doc.user && doc.user.location) {\r\n      var loc2_l = doc.user.location.toLowerCase();\r\n      var loc2 = doc.user.location;\r\n  }\r\n  var stateNotFound = true;\r\n  // var allLoc = ['victoria', 'act', 'new south wales', 'northern territory', 'queensland', 'tasmania', 'western australia', 'south australia'];\r\n  var abbres = {'australian capital territory': 'ACT', 'act': 'ACT', 'victoria': 'VIC', 'new south wales': 'NSW', 'northern territory': 'NT', 'queensland': 'QLD', 'tasmania': 'TAS', 'western australia': 'WA', 'south australia': 'SA'};\r\n  // var thisLoc = null;\r\n  for (var abbre in abbres) {\r\n      if ( ( loc_l && loc_l.includes(abbre) ) || ( loc2_l && loc2_l.includes(abbre) ) ) {\r\n          // var thisLoc = allLoc[i];\r\n          stateNotFound = false;\r\n          emit(abbres[abbre], 1);\r\n          break;\r\n      }\r\n  }\r\n  if (stateNotFound) {\r\n      for (var abbre1 in abbres) {\r\n          if  ( ( loc && loc.includes(abbre1) ) || ( loc2 && loc2.includes(abbre1) ) ) {\r\n              stateNotFound = false;\r\n              emit(abbres[abbre1], 1);\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  // console.log(thisLoc);\r\n}"
    },
    "vulgarWordFreq": {
      "map": "function (doc) {\r\n  if (doc.place && doc.place.full_name) {\r\n      var loc_l = doc.place.full_name.toLowerCase();\r\n      var loc = doc.place.full_name;\r\n  }\r\n  if (doc.user && doc.user.location) {\r\n      var loc2_l = doc.user.location.toLowerCase();\r\n      var loc2 = doc.user.location;\r\n  }\r\n  var stateNotFound = true;\r\n  var abbres = {'australian capital territory': 'ACT', 'act': 'ACT', 'victoria': 'VIC', 'new south wales': 'NSW', 'northern territory': 'NT', 'queensland': 'QLD', 'tasmania': 'TAS', 'western australia': 'WA', 'south australia': 'SA'};\r\n  var thisLoc = null;\r\n  for (var abbre in abbres) {\r\n      if  ( ( loc_l && loc_l.includes(abbre) ) || ( loc2_l && loc2_l.includes(abbre) ) ) {\r\n          thisLoc = abbres[abbre];\r\n          stateNotFound = false;\r\n          break;\r\n      }\r\n  }\r\n  if (stateNotFound) {\r\n      for (var abbre1 in abbres) {\r\n          if  ( ( loc && loc.includes(abbres[abbre1]) ) || ( loc2 && loc2.includes(abbres[abbre1]) ) ) {\r\n              thisLoc = abbres[abbre1];\r\n              stateNotFound = false;\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  // console.log(thisLoc);\r\n  \r\n  if (thisLoc && doc && doc.tag && doc.tag.vulgar_words && doc.tag.vulgar_words == 'True') {\r\n      if (doc.tag.vulgar_words_used) {\r\n          var vulgar_words_used = doc.tag.vulgar_words_used;\r\n          var vulgar_words_freqs = {};\r\n          // console.log(vulgar_words_used);\r\n          for (var j=0; j < vulgar_words_used.length; j++) {\r\n              var vulw = vulgar_words_used[j];\r\n              if (Object.keys(vulgar_words_freqs).includes(vulw)) {\r\n                  vulgar_words_freqs[vulw] += 1;\r\n              } else {\r\n                  vulgar_words_freqs[vulw] = 1;\r\n              }\r\n          }\r\n          // console.log(vulgar_words_freqs);\r\n          emit(thisLoc, vulgar_words_freqs);\r\n      } else {\r\n          console.log('error1');\r\n      }\r\n    } else {\r\n        console.log('error2');\r\n    }\r\n}",
      "reduce": "function(keys, values, rereduce) {\n  var all_freqs = {};\n  for(var i = 0; i < values.length; i++) {\n      var vulgar_words_freqs = values[i];\n      // console.log(vulgar_words_freqs);\n      for(var vulw in vulgar_words_freqs) {\n          var freq = vulgar_words_freqs[vulw];\n          if (Object.keys(all_freqs).includes(vulw)) {\n              all_freqs[vulw] += freq;\n          } else {\n              all_freqs[vulw] = freq;\n          }\n        }\n  }\n  // console.log(all_freqs);\n  // var array = [];\n  // for (var word in all_freqs) {\n  //   array.push({text: word, value: all_freqs[word]});\n  // }\n  return all_freqs;\n  // return array;\n}"
    },
    "hashtagFreq": {
      "map": "function (doc) {\r\n  if (doc.place && doc.place.full_name) {\r\n      var loc_l = doc.place.full_name.toLowerCase();\r\n      var loc = doc.place.full_name;\r\n  }\r\n  if (doc.user && doc.user.location) {\r\n      var loc2_l = doc.user.location.toLowerCase();\r\n      var loc2 = doc.user.location;\r\n  }\r\n  var stateNotFound = true;\r\n  var abbres = {'australian capital territory': 'ACT', 'act': 'ACT', 'victoria': 'VIC', 'new south wales': 'NSW', 'northern territory': 'NT', 'queensland': 'QLD', 'tasmania': 'TAS', 'western australia': 'WA', 'south australia': 'SA'};\r\n  var thisLoc = null;\r\n  for (var abbre in abbres) {\r\n      if  ( ( loc_l && loc_l.includes(abbre) ) || ( loc2_l && loc2_l.includes(abbre) ) ) {\r\n          thisLoc = abbres[abbre];\r\n          stateNotFound = false;\r\n          break;\r\n      }\r\n  }\r\n  if (stateNotFound) {\r\n      for (var abbre1 in abbres) {\r\n          if  ( ( loc && loc.includes(abbres[abbre1]) ) || ( loc2 && loc2.includes(abbres[abbre1]) ) ) {\r\n              thisLoc = abbres[abbre1];\r\n              stateNotFound = false;\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  // console.log(thisLoc);\r\n  \r\n  if (thisLoc && doc && doc.entities && doc.entities.hashtags) {\r\n      var hashtags_freqs = {};\r\n      var hashtags = doc.entities.hashtags;\r\n      for (var j=0; j < hashtags.length; j++) {\r\n          var hashtag = hashtags[j].text;\r\n          if (Object.keys(hashtags_freqs).includes(hashtag)) {\r\n              hashtags_freqs[hashtag] += 1;\r\n          } else {\r\n              hashtags_freqs[hashtag] = 1;\r\n          }\r\n      }\r\n      emit(thisLoc, hashtags_freqs);\r\n  }     \r\n}",
      "reduce": "function(keys, values, rereduce) {\n  var all_freqs = {};\n  for(var i = 0; i < values.length; i++) {\n      var vulgar_words_freqs = values[i];\n      // console.log(vulgar_words_freqs);\n      for(var vulw in vulgar_words_freqs) {\n          var freq = vulgar_words_freqs[vulw];\n          if (Object.keys(all_freqs).includes(vulw)) {\n              all_freqs[vulw] += freq;\n          } else {\n              all_freqs[vulw] = freq;\n          }\n        }\n  }\n  // console.log(all_freqs);\n  // var array = [];\n  // for (var word in all_freqs) {\n  //   array.push({text: word, value: all_freqs[word]});\n  // }\n  return all_freqs;\n  // return array;\n}"
    },
    "vulgarWordFreqAU": {
      "map": "function (doc) {\n  if (doc && doc.tag && doc.tag.vulgar_words && doc.tag.vulgar_words == 'True') {\n      if (doc.tag.vulgar_words_used) {\n          var vulgar_words_used = doc.tag.vulgar_words_used;\n          for (var j=0; j < vulgar_words_used.length; j++) {\n              var vulw = vulgar_words_used[j];\n              emit(vulw, 1);\n          }\n      }\n  }\n}",
      "reduce": "_sum"
    },
    "hashtagFreqAU": {
      "map": "function (doc) {\n  if (doc && doc.entities && doc.entities.hashtags) {\n      var hashtags = doc.entities.hashtags;\n      for (var j=0; j < hashtags.length; j++) {\n          var hashtag = hashtags[j].text;\n          emit(hashtag, 1);\n      }\n  } \n  // else {\n  //     console.log('error1');\n  // }\n    \n}",
      "reduce": "_sum"
    }
  }
}